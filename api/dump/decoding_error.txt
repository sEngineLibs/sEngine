[{
	access: []
	doc: null
	kind: FVar(TPath({
		name: This
		pack: []
		params: []
		sub: null
	}), null)
	meta: []
	name: _parent
	pos: {
		file: null <- expected value
		max: null <- expected value
		min: null <- expected value
	}
}, {
	access: [APublic]
	doc: null
	kind: FProp(get, set, TPath({
		name: This
		pack: []
		params: []
		sub: null
	}), null)
	meta: [{
		name: :track
		params: []
		pos: {
			file: null <- expected value
			max: null <- expected value
			min: null <- expected value
		}
	}]
	name: parent
	pos: {
		file: null <- expected value
		max: null <- expected value
		min: null <- expected value
	}
}, {
	access: [APublic]
	doc: null
	kind: FProp(get, set, TPath({
		name: Int
		pack: []
		params: []
		sub: null
	}), null)
	meta: [{
		name: :track
		params: []
		pos: {
			file: null <- expected value
			max: null <- expected value
			min: null <- expected value
		}
	}]
	name: index
	pos: {
		file: null <- expected value
		max: null <- expected value
		min: null <- expected value
	}
}, {
	access: [APublic]
	doc: null
	kind: FVar(TPath({
		name: Array
		pack: []
		params: [TPType(TPath({
			name: This
			pack: []
			params: []
			sub: null
		}))]
		sub: null
	}), {
		expr: EArrayDecl([])
		pos: {
			file: null <- expected value
			max: null <- expected value
			min: null <- expected value
		}
	})
	meta: []
	name: children
	pos: {
		file: null <- expected value
		max: null <- expected value
		min: null <- expected value
	}
}, {
	access: [APublic]
	doc: null
	kind: FProp(get, never, TPath({
		name: Array
		pack: []
		params: [TPType(TPath({
			name: This
			pack: []
			params: []
			sub: null
		}))]
		sub: null
	}), null)
	meta: []
	name: siblings
	pos: {
		file: null <- expected value
		max: null <- expected value
		min: null <- expected value
	}
}, {
	access: [APublic]
	doc: null
	kind: FFun({
		args: [{
			meta: []
			name: parent
			opt: true
			type: TPath({
				name: This
				pack: []
				params: []
				sub: null
			})
			value: null
		}]
		expr: {
			expr: EBlock([{
				expr: ECall({
					expr: EField({
						expr: EConst(CIdent(parent))
						pos: {
							file: null <- expected value
							max: null <- expected value
							min: null <- expected value
						}
					}, addChild, Safe)
					pos: {
						file: null <- expected value
						max: null <- expected value
						min: null <- expected value
					}
				}, [{
					expr: ECast({
						expr: EConst(CIdent(this))
						pos: {
							file: null <- expected value
							max: null <- expected value
							min: null <- expected value
						}
					}, null)
					pos: {
						file: null <- expected value
						max: null <- expected value
						min: null <- expected value
					}
				}])
				pos: {
					file: null <- expected value
					max: null <- expected value
					min: null <- expected value
				}
			}])
			pos: {
				file: null <- expected value
				max: null <- expected value
				min: null <- expected value
			}
		}
		params: []
		ret: null
	})
	meta: []
	name: new
	pos: {
		file: null <- expected value
		max: null <- expected value
		min: null <- expected value
	}
}, {
	access: [APublic]
	doc: null
	kind: FFun({
		args: [{
			meta: []
			name: value
			opt: false
			type: TPath({
				name: This
				pack: []
				params: []
				sub: null
			})
			value: null
		}]
		expr: {
			expr: EBlock([{
				expr: EIf({
					expr: EBinop(OpBoolOr, {
						expr: EBinop(OpBoolOr, {
							expr: EBinop(OpNotEq, {
								expr: EConst(CIdent(value))
								pos: {
									file: null <- expected value
									max: null <- expected value
									min: null <- expected value
								}
							}, {
								expr: EConst(CIdent(null))
								pos: {
									file: null <- expected value
									max: null <- expected value
									min: null <- expected value
								}
							})
							pos: {
								file: null <- expected value
								max: null <- expected value
								min: null <- expected value
							}
						}, {
							expr: EBinop(OpNotEq, {
								expr: EConst(CIdent(value))
								pos: {
									file: null <- expected value
									max: null <- expected value
									min: null <- expected value
								}
							}, {
								expr: EConst(CIdent(this))
								pos: {
									file: null <- expected value
									max: null <- expected value
									min: null <- expected value
								}
							})
							pos: {
								file: null <- expected value
								max: null <- expected value
								min: null <- expected value
							}
						})
						pos: {
							file: null <- expected value
							max: null <- expected value
							min: null <- expected value
						}
					}, {
						expr: EUnop(OpNot, false, {
							expr: ECall({
								expr: EField({
									expr: EConst(CIdent(children))
									pos: {
										file: null <- expected value
										max: null <- expected value
										min: null <- expected value
									}
								}, contains, Normal)
								pos: {
									file: null <- expected value
									max: null <- expected value
									min: null <- expected value
								}
							}, [{
								expr: EConst(CIdent(value))
								pos: {
									file: null <- expected value
									max: null <- expected value
									min: null <- expected value
								}
							}])
							pos: {
								file: null <- expected value
								max: null <- expected value
								min: null <- expected value
							}
						})
						pos: {
							file: null <- expected value
							max: null <- expected value
							min: null <- expected value
						}
					})
					pos: {
						file: null <- expected value
						max: null <- expected value
						min: null <- expected value
					}
				}, {
					expr: EBlock([{
						expr: EBinop(OpAssign, {
							expr: EField({
								expr: EConst(CIdent(value))
								pos: {
									file: null <- expected value
									max: null <- expected value
									min: null <- expected value
								}
							}, _parent, Normal)
							pos: {
								file: null <- expected value
								max: null <- expected value
								min: null <- expected value
							}
						}, {
							expr: ECast({
								expr: EConst(CIdent(this))
								pos: {
									file: null <- expected value
									max: null <- expected value
									min: null <- expected value
								}
							}, null)
							pos: {
								file: null <- expected value
								max: null <- expected value
								min: null <- expected value
							}
						})
						pos: {
							file: null <- expected value
							max: null <- expected value
							min: null <- expected value
						}
					}, {
						expr: ECall({
							expr: EField({
								expr: EConst(CIdent(children))
								pos: {
									file: null <- expected value
									max: null <- expected value
									min: null <- expected value
								}
							}, push, Normal)
							pos: {
								file: null <- expected value
								max: null <- expected value
								min: null <- expected value
							}
						}, [{
							expr: EConst(CIdent(value))
							pos: {
								file: null <- expected value
								max: null <- expected value
								min: null <- expected value
							}
						}])
						pos: {
							file: null <- expected value
							max: null <- expected value
							min: null <- expected value
						}
					}])
					pos: {
						file: null <- expected value
						max: null <- expected value
						min: null <- expected value
					}
				}, null)
				pos: {
					file: null <- expected value
					max: null <- expected value
					min: null <- expected value
				}
			}])
			pos: {
				file: null <- expected value
				max: null <- expected value
				min: null <- expected value
			}
		}
		params: []
		ret: TPath({
			name: Void
			pack: []
			params: []
			sub: null
		})
	})
	meta: []
	name: addChild
	pos: {
		file: null <- expected value
		max: null <- expected value
		min: null <- expected value
	}
}, {
	access: [APublic]
	doc: null
	kind: FFun({
		args: [{
			meta: []
			name: value
			opt: false
			type: TPath({
				name: This
				pack: []
				params: []
				sub: null
			})
			value: null
		}]
		expr: {
			expr: EBlock([{
				expr: EIf({
					expr: EBinop(OpBoolOr, {
						expr: EBinop(OpBoolOr, {
							expr: EBinop(OpNotEq, {
								expr: EConst(CIdent(value))
								pos: {
									file: null <- expected value
									max: null <- expected value
									min: null <- expected value
								}
							}, {
								expr: EConst(CIdent(null))
								pos: {
									file: null <- expected value
									max: null <- expected value
									min: null <- expected value
								}
							})
							pos: {
								file: null <- expected value
								max: null <- expected value
								min: null <- expected value
							}
						}, {
							expr: EBinop(OpNotEq, {
								expr: EConst(CIdent(value))
								pos: {
									file: null <- expected value
									max: null <- expected value
									min: null <- expected value
								}
							}, {
								expr: EConst(CIdent(this))
								pos: {
									file: null <- expected value
									max: null <- expected value
									min: null <- expected value
								}
							})
							pos: {
								file: null <- expected value
								max: null <- expected value
								min: null <- expected value
							}
						})
						pos: {
							file: null <- expected value
							max: null <- expected value
							min: null <- expected value
						}
					}, {
						expr: ECall({
							expr: EField({
								expr: EConst(CIdent(children))
								pos: {
									file: null <- expected value
									max: null <- expected value
									min: null <- expected value
								}
							}, contains, Normal)
							pos: {
								file: null <- expected value
								max: null <- expected value
								min: null <- expected value
							}
						}, [{
							expr: EConst(CIdent(value))
							pos: {
								file: null <- expected value
								max: null <- expected value
								min: null <- expected value
							}
						}])
						pos: {
							file: null <- expected value
							max: null <- expected value
							min: null <- expected value
						}
					})
					pos: {
						file: null <- expected value
						max: null <- expected value
						min: null <- expected value
					}
				}, {
					expr: EBlock([{
						expr: EBinop(OpAssign, {
							expr: EField({
								expr: EConst(CIdent(value))
								pos: {
									file: null <- expected value
									max: null <- expected value
									min: null <- expected value
								}
							}, _parent, Normal)
							pos: {
								file: null <- expected value
								max: null <- expected value
								min: null <- expected value
							}
						}, {
							expr: EConst(CIdent(null))
							pos: {
								file: null <- expected value
								max: null <- expected value
								min: null <- expected value
							}
						})
						pos: {
							file: null <- expected value
							max: null <- expected value
							min: null <- expected value
						}
					}, {
						expr: ECall({
							expr: EField({
								expr: EConst(CIdent(children))
								pos: {
									file: null <- expected value
									max: null <- expected value
									min: null <- expected value
								}
							}, remove, Normal)
							pos: {
								file: null <- expected value
								max: null <- expected value
								min: null <- expected value
							}
						}, [{
							expr: EConst(CIdent(value))
							pos: {
								file: null <- expected value
								max: null <- expected value
								min: null <- expected value
							}
						}])
						pos: {
							file: null <- expected value
							max: null <- expected value
							min: null <- expected value
						}
					}])
					pos: {
						file: null <- expected value
						max: null <- expected value
						min: null <- expected value
					}
				}, null)
				pos: {
					file: null <- expected value
					max: null <- expected value
					min: null <- expected value
				}
			}])
			pos: {
				file: null <- expected value
				max: null <- expected value
				min: null <- expected value
			}
		}
		params: []
		ret: TPath({
			name: Void
			pack: []
			params: []
			sub: null
		})
	})
	meta: []
	name: removeChild
	pos: {
		file: null <- expected value
		max: null <- expected value
		min: null <- expected value
	}
}, {
	access: [APublic]
	doc: null
	kind: FFun({
		args: [{
			meta: []
			name: value
			opt: false
			type: TPath({
				name: This
				pack: []
				params: []
				sub: null
			})
			value: null
		}]
		expr: {
			expr: EBlock([{
				expr: EIf({
					expr: EBinop(OpNotEq, {
						expr: EConst(CIdent(value))
						pos: {
							file: null <- expected value
							max: null <- expected value
							min: null <- expected value
						}
					}, {
						expr: EConst(CIdent(null))
						pos: {
							file: null <- expected value
							max: null <- expected value
							min: null <- expected value
						}
					})
					pos: {
						file: null <- expected value
						max: null <- expected value
						min: null <- expected value
					}
				}, {
					expr: ECall({
						expr: EField({
							expr: EConst(CIdent(value))
							pos: {
								file: null <- expected value
								max: null <- expected value
								min: null <- expected value
							}
						}, addChild, Normal)
						pos: {
							file: null <- expected value
							max: null <- expected value
							min: null <- expected value
						}
					}, [{
						expr: ECast({
							expr: EConst(CIdent(this))
							pos: {
								file: null <- expected value
								max: null <- expected value
								min: null <- expected value
							}
						}, null)
						pos: {
							file: null <- expected value
							max: null <- expected value
							min: null <- expected value
						}
					}])
					pos: {
						file: null <- expected value
						max: null <- expected value
						min: null <- expected value
					}
				}, {
					expr: ECall({
						expr: EConst(CIdent(removeParent))
						pos: {
							file: null <- expected value
							max: null <- expected value
							min: null <- expected value
						}
					}, [])
					pos: {
						file: null <- expected value
						max: null <- expected value
						min: null <- expected value
					}
				})
				pos: {
					file: null <- expected value
					max: null <- expected value
					min: null <- expected value
				}
			}])
			pos: {
				file: null <- expected value
				max: null <- expected value
				min: null <- expected value
			}
		}
		params: []
		ret: TPath({
			name: Void
			pack: []
			params: []
			sub: null
		})
	})
	meta: []
	name: setParent
	pos: {
		file: null <- expected value
		max: null <- expected value
		min: null <- expected value
	}
}, {
	access: [APublic]
	doc: null
	kind: FFun({
		args: []
		expr: {
			expr: EBlock([{
				expr: ECall({
					expr: EField({
						expr: EConst(CIdent(parent))
						pos: {
							file: null <- expected value
							max: null <- expected value
							min: null <- expected value
						}
					}, removeChild, Safe)
					pos: {
						file: null <- expected value
						max: null <- expected value
						min: null <- expected value
					}
				}, [{
					expr: ECast({
						expr: EConst(CIdent(this))
						pos: {
							file: null <- expected value
							max: null <- expected value
							min: null <- expected value
						}
					}, null)
					pos: {
						file: null <- expected value
						max: null <- expected value
						min: null <- expected value
					}
				}])
				pos: {
					file: null <- expected value
					max: null <- expected value
					min: null <- expected value
				}
			}])
			pos: {
				file: null <- expected value
				max: null <- expected value
				min: null <- expected value
			}
		}
		params: []
		ret: TPath({
			name: Void
			pack: []
			params: []
			sub: null
		})
	})
	meta: []
	name: removeParent
	pos: {
		file: null <- expected value
		max: null <- expected value
		min: null <- expected value
	}
}, {
	access: [APublic]
	doc: null
	kind: FFun({
		args: []
		expr: {
			expr: EBlock([{
				expr: EReturn({
					expr: ECall({
						expr: EField({
							expr: EConst(CIdent(Type))
							pos: {
								file: null <- expected value
								max: null <- expected value
								min: null <- expected value
							}
						}, getClassName, Normal)
						pos: {
							file: null <- expected value
							max: null <- expected value
							min: null <- expected value
						}
					}, [{
						expr: ECall({
							expr: EField({
								expr: EConst(CIdent(Type))
								pos: {
									file: null <- expected value
									max: null <- expected value
									min: null <- expected value
								}
							}, getClass, Normal)
							pos: {
								file: null <- expected value
								max: null <- expected value
								min: null <- expected value
							}
						}, [{
							expr: EConst(CIdent(this))
							pos: {
								file: null <- expected value
								max: null <- expected value
								min: null <- expected value
							}
						}])
						pos: {
							file: null <- expected value
							max: null <- expected value
							min: null <- expected value
						}
					}])
					pos: {
						file: null <- expected value
						max: null <- expected value
						min: null <- expected value
					}
				})
				pos: {
					file: null <- expected value
					max: null <- expected value
					min: null <- expected value
				}
			}])
			pos: {
				file: null <- expected value
				max: null <- expected value
				min: null <- expected value
			}
		}
		params: []
		ret: TPath({
			name: String
			pack: []
			params: []
			sub: null
		})
	})
	meta: []
	name: toString
	pos: {
		file: null <- expected value
		max: null <- expected value
		min: null <- expected value
	}
}, {
	access: [AInline]
	doc: null
	kind: FFun({
		args: []
		expr: {
			expr: EBlock([{
				expr: EReturn({
					expr: EConst(CIdent(_parent))
					pos: {
						file: null <- expected value
						max: null <- expected value
						min: null <- expected value
					}
				})
				pos: {
					file: null <- expected value
					max: null <- expected value
					min: null <- expected value
				}
			}])
			pos: {
				file: null <- expected value
				max: null <- expected value
				min: null <- expected value
			}
		}
		params: []
		ret: null
	})
	meta: []
	name: get_parent
	pos: {
		file: null <- expected value
		max: null <- expected value
		min: null <- expected value
	}
}, {
	access: [AInline]
	doc: null
	kind: FFun({
		args: [{
			meta: []
			name: value
			opt: false
			type: TPath({
				name: This
				pack: []
				params: []
				sub: null
			})
			value: null
		}]
		expr: {
			expr: EBlock([{
				expr: ECall({
					expr: EConst(CIdent(setParent))
					pos: {
						file: null <- expected value
						max: null <- expected value
						min: null <- expected value
					}
				}, [{
					expr: EConst(CIdent(value))
					pos: {
						file: null <- expected value
						max: null <- expected value
						min: null <- expected value
					}
				}])
				pos: {
					file: null <- expected value
					max: null <- expected value
					min: null <- expected value
				}
			}, {
				expr: EReturn({
					expr: EConst(CIdent(value))
					pos: {
						file: null <- expected value
						max: null <- expected value
						min: null <- expected value
					}
				})
				pos: {
					file: null <- expected value
					max: null <- expected value
					min: null <- expected value
				}
			}])
			pos: {
				file: null <- expected value
				max: null <- expected value
				min: null <- expected value
			}
		}
		params: []
		ret: TPath({
			name: This
			pack: []
			params: []
			sub: null
		})
	})
	meta: []
	name: set_parent
	pos: {
		file: null <- expected value
		max: null <- expected value
		min: null <- expected value
	}
}, {
	access: [AInline]
	doc: null
	kind: FFun({
		args: []
		expr: {
			expr: EBlock([{
				expr: EReturn({
					expr: ECall({
						expr: EField({
							expr: EField({
								expr: EConst(CIdent(_parent))
								pos: {
									file: null <- expected value
									max: null <- expected value
									min: null <- expected value
								}
							}, children, Normal)
							pos: {
								file: null <- expected value
								max: null <- expected value
								min: null <- expected value
							}
						}, indexOf, Normal)
						pos: {
							file: null <- expected value
							max: null <- expected value
							min: null <- expected value
						}
					}, [{
						expr: ECast({
							expr: EConst(CIdent(this))
							pos: {
								file: null <- expected value
								max: null <- expected value
								min: null <- expected value
							}
						}, null)
						pos: {
							file: null <- expected value
							max: null <- expected value
							min: null <- expected value
						}
					}])
					pos: {
						file: null <- expected value
						max: null <- expected value
						min: null <- expected value
					}
				})
				pos: {
					file: null <- expected value
					max: null <- expected value
					min: null <- expected value
				}
			}])
			pos: {
				file: null <- expected value
				max: null <- expected value
				min: null <- expected value
			}
		}
		params: []
		ret: TPath({
			name: Int
			pack: []
			params: []
			sub: null
		})
	})
	meta: []
	name: get_index
	pos: {
		file: null <- expected value
		max: null <- expected value
		min: null <- expected value
	}
}, {
	access: [AInline]
	doc: null
	kind: FFun({
		args: [{
			meta: []
			name: value
			opt: false
			type: TPath({
				name: Int
				pack: []
				params: []
				sub: null
			})
			value: null
		}]
		expr: {
			expr: EBlock([{
				expr: ECall({
					expr: EField({
						expr: EField({
							expr: EConst(CIdent(_parent))
							pos: {
								file: null <- expected value
								max: null <- expected value
								min: null <- expected value
							}
						}, children, Normal)
						pos: {
							file: null <- expected value
							max: null <- expected value
							min: null <- expected value
						}
					}, remove, Normal)
					pos: {
						file: null <- expected value
						max: null <- expected value
						min: null <- expected value
					}
				}, [{
					expr: ECast({
						expr: EConst(CIdent(this))
						pos: {
							file: null <- expected value
							max: null <- expected value
							min: null <- expected value
						}
					}, null)
					pos: {
						file: null <- expected value
						max: null <- expected value
						min: null <- expected value
					}
				}])
				pos: {
					file: null <- expected value
					max: null <- expected value
					min: null <- expected value
				}
			}, {
				expr: ECall({
					expr: EField({
						expr: EField({
							expr: EConst(CIdent(_parent))
							pos: {
								file: null <- expected value
								max: null <- expected value
								min: null <- expected value
							}
						}, children, Normal)
						pos: {
							file: null <- expected value
							max: null <- expected value
							min: null <- expected value
						}
					}, insert, Normal)
					pos: {
						file: null <- expected value
						max: null <- expected value
						min: null <- expected value
					}
				}, [{
					expr: EConst(CIdent(value))
					pos: {
						file: null <- expected value
						max: null <- expected value
						min: null <- expected value
					}
				}, {
					expr: ECast({
						expr: EConst(CIdent(this))
						pos: {
							file: null <- expected value
							max: null <- expected value
							min: null <- expected value
						}
					}, null)
					pos: {
						file: null <- expected value
						max: null <- expected value
						min: null <- expected value
					}
				}])
				pos: {
					file: null <- expected value
					max: null <- expected value
					min: null <- expected value
				}
			}, {
				expr: EReturn({
					expr: EConst(CIdent(value))
					pos: {
						file: null <- expected value
						max: null <- expected value
						min: null <- expected value
					}
				})
				pos: {
					file: null <- expected value
					max: null <- expected value
					min: null <- expected value
				}
			}])
			pos: {
				file: null <- expected value
				max: null <- expected value
				min: null <- expected value
			}
		}
		params: []
		ret: TPath({
			name: Int
			pack: []
			params: []
			sub: null
		})
	})
	meta: []
	name: set_index
	pos: {
		file: null <- expected value
		max: null <- expected value
		min: null <- expected value
	}
}, {
	access: [AInline]
	doc: null
	kind: FFun({
		args: []
		expr: {
			expr: EBlock([{
				expr: EIf({
					expr: EBinop(OpNotEq, {
						expr: EConst(CIdent(parent))
						pos: {
							file: null <- expected value
							max: null <- expected value
							min: null <- expected value
						}
					}, {
						expr: EConst(CIdent(null))
						pos: {
							file: null <- expected value
							max: null <- expected value
							min: null <- expected value
						}
					})
					pos: {
						file: null <- expected value
						max: null <- expected value
						min: null <- expected value
					}
				}, {
					expr: EBlock([{
						expr: EVars([{
							expr: {
								expr: ECall({
									expr: EField({
										expr: EField({
											expr: EConst(CIdent(parent))
											pos: {
												file: null <- expected value
												max: null <- expected value
												min: null <- expected value
											}
										}, children, Normal)
										pos: {
											file: null <- expected value
											max: null <- expected value
											min: null <- expected value
										}
									}, copy, Normal)
									pos: {
										file: null <- expected value
										max: null <- expected value
										min: null <- expected value
									}
								}, [])
								pos: {
									file: null <- expected value
									max: null <- expected value
									min: null <- expected value
								}
							}
							isFinal: false
							isStatic: false
							meta: []
							name: s
							namePos: {
								file: null <- expected value
								max: null <- expected value
								min: null <- expected value
							}
							type: null
						}])
						pos: {
							file: null <- expected value
							max: null <- expected value
							min: null <- expected value
						}
					}, {
						expr: ECall({
							expr: EField({
								expr: EConst(CIdent(s))
								pos: {
									file: null <- expected value
									max: null <- expected value
									min: null <- expected value
								}
							}, remove, Normal)
							pos: {
								file: null <- expected value
								max: null <- expected value
								min: null <- expected value
							}
						}, [{
							expr: ECast({
								expr: EConst(CIdent(this))
								pos: {
									file: null <- expected value
									max: null <- expected value
									min: null <- expected value
								}
							}, null)
							pos: {
								file: null <- expected value
								max: null <- expected value
								min: null <- expected value
							}
						}])
						pos: {
							file: null <- expected value
							max: null <- expected value
							min: null <- expected value
						}
					}, {
						expr: EReturn({
							expr: EConst(CIdent(s))
							pos: {
								file: null <- expected value
								max: null <- expected value
								min: null <- expected value
							}
						})
						pos: {
							file: null <- expected value
							max: null <- expected value
							min: null <- expected value
						}
					}])
					pos: {
						file: null <- expected value
						max: null <- expected value
						min: null <- expected value
					}
				}, null)
				pos: {
					file: null <- expected value
					max: null <- expected value
					min: null <- expected value
				}
			}, {
				expr: EReturn({
					expr: EArrayDecl([])
					pos: {
						file: null <- expected value
						max: null <- expected value
						min: null <- expected value
					}
				})
				pos: {
					file: null <- expected value
					max: null <- expected value
					min: null <- expected value
				}
			}])
			pos: {
				file: null <- expected value
				max: null <- expected value
				min: null <- expected value
			}
		}
		params: []
		ret: null
	})
	meta: []
	name: get_siblings
	pos: {
		file: null <- expected value
		max: null <- expected value
		min: null <- expected value
	}
}, {
	access: null
	doc: null
	kind: FVar(TPath({
		name: VirtualObject_parentChanged_Signal
		pack: [se]
		params: [TPType(null <- expected enum value)]
		sub: null
	}), {
		expr: EArrayDecl([])
		pos: {
			file: null <- expected value
			max: null <- expected value
			min: null <- expected value
		}
	})
	meta: null
	name: parentChanged
	pos: {
		file: null <- expected value
		max: null <- expected value
		min: null <- expected value
	}
}, {
	access: [APublic, AInline]
	doc: null
	kind: FFun({
		args: [{
			meta: null
			name: slot
			opt: null
			type: TFunction([TNamed(parent, TPath({
				name: This
				pack: []
				params: []
				sub: null
			}))], TPath({
				name: StdTypes
				pack: []
				params: []
				sub: Void
			}))
			value: null
		}]
		expr: {
			expr: ECall({
				expr: EField({
					expr: EConst(CIdent(parentChanged))
					pos: {
						file: null <- expected value
						max: null <- expected value
						min: null <- expected value
					}
				}, connect, Normal)
				pos: {
					file: null <- expected value
					max: null <- expected value
					min: null <- expected value
				}
			}, [{
				expr: EConst(CIdent(slot))
				pos: {
					file: null <- expected value
					max: null <- expected value
					min: null <- expected value
				}
			}])
			pos: {
				file: null <- expected value
				max: null <- expected value
				min: null <- expected value
			}
		}
		params: null
		ret: null
	})
	meta: null
	name: onParentChanged
	pos: {
		file: null <- expected value
		max: null <- expected value
		min: null <- expected value
	}
}, {
	access: null
	doc: null
	kind: FVar(TPath({
		name: VirtualObject_indexChanged_Signal
		pack: [se]
		params: [TPType(null <- expected enum value)]
		sub: null
	}), {
		expr: EArrayDecl([])
		pos: {
			file: null <- expected value
			max: null <- expected value
			min: null <- expected value
		}
	})
	meta: null
	name: indexChanged
	pos: {
		file: null <- expected value
		max: null <- expected value
		min: null <- expected value
	}
}, {
	access: [APublic, AInline]
	doc: null
	kind: FFun({
		args: [{
			meta: null
			name: slot
			opt: null
			type: TFunction([TNamed(index, TPath({
				name: StdTypes
				pack: []
				params: []
				sub: Int
			}))], TPath({
				name: StdTypes
				pack: []
				params: []
				sub: Void
			}))
			value: null
		}]
		expr: {
			expr: ECall({
				expr: EField({
					expr: EConst(CIdent(indexChanged))
					pos: {
						file: null <- expected value
						max: null <- expected value
						min: null <- expected value
					}
				}, connect, Normal)
				pos: {
					file: null <- expected value
					max: null <- expected value
					min: null <- expected value
				}
			}, [{
				expr: EConst(CIdent(slot))
				pos: {
					file: null <- expected value
					max: null <- expected value
					min: null <- expected value
				}
			}])
			pos: {
				file: null <- expected value
				max: null <- expected value
				min: null <- expected value
			}
		}
		params: null
		ret: null
	})
	meta: null
	name: onIndexChanged
	pos: {
		file: null <- expected value
		max: null <- expected value
		min: null <- expected value
	}
}]
line 13: expected value
line 14: expected value
line 15: expected value
line 30: expected value
line 31: expected value
line 32: expected value
line 37: expected value
line 38: expected value
line 39: expected value
line 54: expected value
line 55: expected value
line 56: expected value
line 61: expected value
line 62: expected value
line 63: expected value
line 81: expected value
line 82: expected value
line 83: expected value
line 89: expected value
line 90: expected value
line 91: expected value
line 110: expected value
line 111: expected value
line 112: expected value
line 136: expected value
line 137: expected value
line 138: expected value
line 142: expected value
line 143: expected value
line 144: expected value
line 150: expected value
line 151: expected value
line 152: expected value
line 156: expected value
line 157: expected value
line 158: expected value
line 162: expected value
line 163: expected value
line 164: expected value
line 168: expected value
line 169: expected value
line 170: expected value
line 179: expected value
line 180: expected value
line 181: expected value
line 207: expected value
line 208: expected value
line 209: expected value
line 214: expected value
line 215: expected value
line 216: expected value
line 220: expected value
line 221: expected value
line 222: expected value
line 228: expected value
line 229: expected value
line 230: expected value
line 235: expected value
line 236: expected value
line 237: expected value
line 241: expected value
line 242: expected value
line 243: expected value
line 247: expected value
line 248: expected value
line 249: expected value
line 257: expected value
line 258: expected value
line 259: expected value
line 263: expected value
line 264: expected value
line 265: expected value
line 270: expected value
line 271: expected value
line 272: expected value
line 276: expected value
line 277: expected value
line 278: expected value
line 282: expected value
line 283: expected value
line 284: expected value
line 288: expected value
line 289: expected value
line 290: expected value
line 298: expected value
line 299: expected value
line 300: expected value
line 304: expected value
line 305: expected value
line 306: expected value
line 312: expected value
line 313: expected value
line 314: expected value
line 318: expected value
line 319: expected value
line 320: expected value
line 324: expected value
line 325: expected value
line 326: expected value
line 333: expected value
line 334: expected value
line 335: expected value
line 339: expected value
line 340: expected value
line 341: expected value
line 346: expected value
line 347: expected value
line 348: expected value
line 352: expected value
line 353: expected value
line 354: expected value
line 358: expected value
line 359: expected value
line 360: expected value
line 364: expected value
line 365: expected value
line 366: expected value
line 370: expected value
line 371: expected value
line 372: expected value
line 386: expected value
line 387: expected value
line 388: expected value
line 414: expected value
line 415: expected value
line 416: expected value
line 421: expected value
line 422: expected value
line 423: expected value
line 427: expected value
line 428: expected value
line 429: expected value
line 435: expected value
line 436: expected value
line 437: expected value
line 442: expected value
line 443: expected value
line 444: expected value
line 448: expected value
line 449: expected value
line 450: expected value
line 454: expected value
line 455: expected value
line 456: expected value
line 463: expected value
line 464: expected value
line 465: expected value
line 469: expected value
line 470: expected value
line 471: expected value
line 476: expected value
line 477: expected value
line 478: expected value
line 482: expected value
line 483: expected value
line 484: expected value
line 488: expected value
line 489: expected value
line 490: expected value
line 498: expected value
line 499: expected value
line 500: expected value
line 504: expected value
line 505: expected value
line 506: expected value
line 511: expected value
line 512: expected value
line 513: expected value
line 517: expected value
line 518: expected value
line 519: expected value
line 526: expected value
line 527: expected value
line 528: expected value
line 532: expected value
line 533: expected value
line 534: expected value
line 539: expected value
line 540: expected value
line 541: expected value
line 545: expected value
line 546: expected value
line 547: expected value
line 551: expected value
line 552: expected value
line 553: expected value
line 557: expected value
line 558: expected value
line 559: expected value
line 563: expected value
line 564: expected value
line 565: expected value
line 579: expected value
line 580: expected value
line 581: expected value
line 605: expected value
line 606: expected value
line 607: expected value
line 612: expected value
line 613: expected value
line 614: expected value
line 618: expected value
line 619: expected value
line 620: expected value
line 627: expected value
line 628: expected value
line 629: expected value
line 633: expected value
line 634: expected value
line 635: expected value
line 641: expected value
line 642: expected value
line 643: expected value
line 647: expected value
line 648: expected value
line 649: expected value
line 653: expected value
line 654: expected value
line 655: expected value
line 661: expected value
line 662: expected value
line 663: expected value
line 667: expected value
line 668: expected value
line 669: expected value
line 673: expected value
line 674: expected value
line 675: expected value
line 679: expected value
line 680: expected value
line 681: expected value
line 695: expected value
line 696: expected value
line 697: expected value
line 710: expected value
line 711: expected value
line 712: expected value
line 716: expected value
line 717: expected value
line 718: expected value
line 724: expected value
line 725: expected value
line 726: expected value
line 730: expected value
line 731: expected value
line 732: expected value
line 736: expected value
line 737: expected value
line 738: expected value
line 742: expected value
line 743: expected value
line 744: expected value
line 758: expected value
line 759: expected value
line 760: expected value
line 774: expected value
line 775: expected value
line 776: expected value
line 780: expected value
line 781: expected value
line 782: expected value
line 789: expected value
line 790: expected value
line 791: expected value
line 795: expected value
line 796: expected value
line 797: expected value
line 802: expected value
line 803: expected value
line 804: expected value
line 808: expected value
line 809: expected value
line 810: expected value
line 814: expected value
line 815: expected value
line 816: expected value
line 820: expected value
line 821: expected value
line 822: expected value
line 826: expected value
line 827: expected value
line 828: expected value
line 842: expected value
line 843: expected value
line 844: expected value
line 856: expected value
line 857: expected value
line 858: expected value
line 862: expected value
line 863: expected value
line 864: expected value
line 868: expected value
line 869: expected value
line 870: expected value
line 879: expected value
line 880: expected value
line 881: expected value
line 904: expected value
line 905: expected value
line 906: expected value
line 911: expected value
line 912: expected value
line 913: expected value
line 917: expected value
line 918: expected value
line 919: expected value
line 925: expected value
line 926: expected value
line 927: expected value
line 931: expected value
line 932: expected value
line 933: expected value
line 937: expected value
line 938: expected value
line 939: expected value
line 953: expected value
line 954: expected value
line 955: expected value
line 970: expected value
line 971: expected value
line 972: expected value
line 976: expected value
line 977: expected value
line 978: expected value
line 982: expected value
line 983: expected value
line 984: expected value
line 990: expected value
line 991: expected value
line 992: expected value
line 996: expected value
line 997: expected value
line 998: expected value
line 1002: expected value
line 1003: expected value
line 1004: expected value
line 1008: expected value
line 1009: expected value
line 1010: expected value
line 1014: expected value
line 1015: expected value
line 1016: expected value
line 1030: expected value
line 1031: expected value
line 1032: expected value
line 1057: expected value
line 1058: expected value
line 1059: expected value
line 1063: expected value
line 1064: expected value
line 1065: expected value
line 1069: expected value
line 1070: expected value
line 1071: expected value
line 1077: expected value
line 1078: expected value
line 1079: expected value
line 1083: expected value
line 1084: expected value
line 1085: expected value
line 1089: expected value
line 1090: expected value
line 1091: expected value
line 1099: expected value
line 1100: expected value
line 1101: expected value
line 1105: expected value
line 1106: expected value
line 1107: expected value
line 1111: expected value
line 1112: expected value
line 1113: expected value
line 1118: expected value
line 1119: expected value
line 1120: expected value
line 1126: expected value
line 1127: expected value
line 1128: expected value
line 1132: expected value
line 1133: expected value
line 1134: expected value
line 1138: expected value
line 1139: expected value
line 1140: expected value
line 1146: expected value
line 1147: expected value
line 1148: expected value
line 1152: expected value
line 1153: expected value
line 1154: expected value
line 1158: expected value
line 1159: expected value
line 1160: expected value
line 1174: expected value
line 1175: expected value
line 1176: expected value
line 1189: expected value
line 1190: expected value
line 1191: expected value
line 1196: expected value
line 1197: expected value
line 1198: expected value
line 1202: expected value
line 1203: expected value
line 1204: expected value
line 1215: expected value
line 1216: expected value
line 1217: expected value
line 1221: expected value
line 1222: expected value
line 1223: expected value
line 1227: expected value
line 1228: expected value
line 1229: expected value
line 1233: expected value
line 1234: expected value
line 1235: expected value
line 1243: expected value
line 1244: expected value
line 1245: expected value
line 1250: expected value
line 1251: expected value
line 1252: expected value
line 1259: expected value
line 1260: expected value
line 1261: expected value
line 1265: expected value
line 1266: expected value
line 1267: expected value
line 1273: expected value
line 1274: expected value
line 1275: expected value
line 1279: expected value
line 1280: expected value
line 1281: expected value
line 1285: expected value
line 1286: expected value
line 1287: expected value
line 1293: expected value
line 1294: expected value
line 1295: expected value
line 1299: expected value
line 1300: expected value
line 1301: expected value
line 1305: expected value
line 1306: expected value
line 1307: expected value
line 1311: expected value
line 1312: expected value
line 1313: expected value
line 1319: expected value
line 1320: expected value
line 1321: expected value
line 1325: expected value
line 1326: expected value
line 1327: expected value
line 1331: expected value
line 1332: expected value
line 1333: expected value
line 1342: expected value
line 1343: expected value
line 1344: expected value
line 1352: expected enum value
line 1357: expected value
line 1358: expected value
line 1359: expected value
line 1365: expected value
line 1366: expected value
line 1367: expected value
line 1395: expected value
line 1396: expected value
line 1397: expected value
line 1401: expected value
line 1402: expected value
line 1403: expected value
line 1408: expected value
line 1409: expected value
line 1410: expected value
line 1414: expected value
line 1415: expected value
line 1416: expected value
line 1425: expected value
line 1426: expected value
line 1427: expected value
line 1435: expected enum value
line 1440: expected value
line 1441: expected value
line 1442: expected value
line 1448: expected value
line 1449: expected value
line 1450: expected value
line 1478: expected value
line 1479: expected value
line 1480: expected value
line 1484: expected value
line 1485: expected value
line 1486: expected value
line 1491: expected value
line 1492: expected value
line 1493: expected value
line 1497: expected value
line 1498: expected value
line 1499: expected value
line 1508: expected value
line 1509: expected value
line 1510: expected value